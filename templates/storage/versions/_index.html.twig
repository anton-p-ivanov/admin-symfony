{% set uuid = app.request.get('uuid') %}
{% set buttons = [
    [
        ['Upload new version', path('storage:versions:upload', {'uuid': uuid})],
        ['svg-refresh', path('storage:versions:index', {'uuid': uuid}), true]
    ],
] %}

<table class="table">
    <colgroup>
        <col>
        <col width="70">
        <col width="150">
        <col width="150" span="2">
        <col width="40">
    </colgroup>
    <thead class="table__head">
    <tr class="table__row">
        {% set headers = [
            { 'title': 'Name' },
            { 'title': 'Active', 'attr': {'class': 'table__item table__item--head table__item--center'} },
            { 'title': 'Size', 'attr': {'class': 'table__item table__item--head table__item--right'} },
            { 'title': 'Owner' },
            { 'title': 'Modified' }
        ] %}
        {% for header in headers %}
            {% set header = {'title': null, 'attr': {'class': 'table__item table__item--head'}} | merge(header) %}
            <th {% with { attr: header.attr } %}{{ block('attributes') }}{% endwith %}>
                {{ header.title }}
            </th>
        {% endfor %}
        <th class="table__item table__item--head table__item--icon">
            <svg width="24" height="24"><use xlink:href="#svg-menu"></use></svg>
        </th>
    </tr>
    </thead>
    <tbody class="table__body table__body--panel">
    {% for version in rows %}
    <tr class="table__row">
        <td class="table__item">
            <a href="{{ path('storage:versions:edit', {'uuid': version.uuid}) }}" data-toggle="modal" data-remote="true">{{ version.file.name }}</a>
        </td>
        <td class="table__item table__item--center">
            {% if version.isActive %}
                <svg width="24" height="24"><use xlink:href="#svg-check"></use></svg>
            {% endif %}
        </td>
        <td class="table__item table__item--right">
            {{ version.file.size | size }}
        </td>
        <td class="table__item">
            {% if version.file.workflow is not null and version.file.workflow.updated is not null %}
                {{ version.file.workflow.updated.fullName }}
            {% else %}
                <em>Not available</em>
            {% endif %}
        </td>
        <td class="table__item">
            {% if version.file.workflow is not null %}
                {{ version.file.workflow.updatedAt | date }}
            {% else %}
                <em>Not available</em>
            {% endif %}
        </td>
        <td class="table__item table__item--dropdown">
            <div class="dropdown dropdown--table">
                <a class="dropdown__toggle dropdown__toggle--icon" data-toggle="dropdown">
                    <svg width="24" height="24"><use xlink:href="#svg-menu"></use></svg>
                </a>
                <ul class="dropdown__menu dropdown__menu--right">
                    {% set items = [
                        [{
                            'title': 'Activate',
                            'url': path('storage:versions:activate', {'uuid': version.uuid}),
                            'isVisible': not version.isActive
                        }],
                        [
                            {
                                'title': 'Edit',
                                'url': path('storage:versions:edit', {'uuid': version.uuid}),
                                'link_attr': {'data-toggle': 'modal', 'data-remote': true}
                            },
                            {
                                'title': 'Download',
                                'url': path('storage:versions:download', {'uuid': version.uuid})
                            },
                        ],
                        [{
                            'title': 'Delete',
                            'url': path('storage:versions:delete', {'uuid': version.uuid}),
                            'isVisible': not version.isActive
                        }]
                    ] %}
                    {% for group in items %}
                        {% for item in group %}
                            {% set item = {'title': null, 'url': null, 'isVisible': true, 'link_attr': {}} | merge(item) %}
                            {% if item.isVisible is same as(true) %}
                                <li class="dropdown__item">
                                    <a href="{{ item.url }}" class="dropdown__link"{% with { attr: item.link_attr } %}{{ block('attributes') }}{% endwith %}>{{ item.title }}</a>
                                </li>
                            {% else %}
                                <li class="dropdown__item dropdown__item--disabled">
                                    <span class="dropdown__span">{{ item.title }}</span>
                                </li>
                            {% endif %}
                        {% endfor %}
                        {% if not loop.last %}
                            <li class="dropdown__item dropdown__item--divider"></li>
                        {% endif %}
                    {% endfor %}
                </ul>
            </div>
        </td>
    </tr>
    {% endfor %}
    </tbody>
</table>

{{ include('pagination.html.twig', {
    'paginator': rows,
    'path': 'storage:versions:index',
    'params': {'uuid': app.request.get('uuid')}
}) }}

{% block attributes %}
    {% if attr is defined %}
        {%- for name, value in attr -%}
            {{- " " -}}
            {%- if name in ['placeholder', 'title'] -%}
                {{- name }}="{{ translation_domain is same as(false) ? value : value|trans({}, translation_domain) }}"
            {%- elseif value is same as(true) -%}
                {{- name }}="{{ name }}"
            {%- elseif value is not same as(false) -%}
                {{- name }}="{{ value }}"
            {%- endif -%}
        {%- endfor -%}
    {% endif %}
{% endblock attributes %}

{% block stylesheets %}
    {{ encore_entry_link_tags('grid') }}
{% endblock %}